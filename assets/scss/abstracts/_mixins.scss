/* ========================================================================== */
/* MIXINS
/* This file contains all application-wide Sass mixins.
/* ========================================================================== */

/* -------------------------------------------------------------------------- */
/* Mixin for media queries
/* -------------------------------------------------------------------------- */
@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoints}`. "
    +"Please make sure `#{$name}` is defined in `$breakpoints` map.";
  }
}

/* -------------------------------------------------------------------------- */
/* Mixin for clear fix
/* -------------------------------------------------------------------------- */
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

/* -------------------------------------------------------------------------- */
/* Mixin for content
/* -------------------------------------------------------------------------- */
@mixin content {
  overflow: auto;

  >blockquote,
  >dd,
  >figure,
  >form,
  >iframe,
  >img,
  >nav,
  >ol,
  >p,
  >pre,
  >ul {
    margin-bottom: $font-size-copy;
    
    &:last-child {
      margin-bottom: 0;
    }

    @include respond-to('small') {
      margin-bottom: #{$font-size-copy * $scale-large};

      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  >h1,
  >h2,
  >h3,
  >h4,
  >h5,
  >h6 {
    margin-top: 1em;

    &:first-child {
      margin-top: 0;
    }
  }

  >blockquote {
    position: relative;

    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }

    &::before {
      content: '”';
      font-size: 6em;
      right: -.1em;
      line-height: 1;
      opacity: .1;
      position: absolute;
      top: -.1em;
      z-index: -1;
    }

    footer {
      align-items: center;
      display: flex;
      flex-direction: row;
      font-family: $font-family-interaction;
      font-weight: $font-weight-title;
      justify-content: flex-start;
      line-height: 1;

      &::before {
        content: '— ';
      }

      > div {
        display: flex;
        flex-direction: column;
        justify-content: center;

        small {
          display: inline-block;
          font-weight: $font-weight-copy;
          line-height: $font-height-copy;
        }

        .title-small {
          margin-bottom: 0;
        }
      }

      figure {
        border-radius: 999px;
        height: #{$font-size-copy * 5};
        margin-right: 1em;
        overflow: hidden;
        width: #{$font-size-copy * 5};
        
        @include respond-to('small') {
          height: #{$font-size-copy * $scale-large * 5};
          width: #{$font-size-copy * $scale-large * 5};
        }
      }
    }

    p {
      color: lighten($color-foreground-1, 60%);
      font-style: italic;
      font-size: #{$font-size-copy * $scale-large};
      line-height: $scale-x-large;
      margin-bottom: #{$font-size-copy * $scale-small};

      @include respond-to('small') {
        font-size: #{$font-size-copy * $scale-large * $scale-large};
        margin-bottom: #{$font-size-copy};
      }
    }

    &.post__quote {
      footer {
        &::before {
          content: none;
        }
      }

      p {
        color: $color-foreground-1;
        font-size: #{$font-size-copy * $scale-x-large};
        @include respond-to('small') {
          font-size: #{$font-size-copy * $scale-x-large * $scale-x-large};
        }
      }
    }
  }

  >img {
    height: auto;
    width: 100%;
    max-width: 100%;
  }

  .aligncenter,
  .alignleft,
  .alignright {
    max-width: 100%;
  }
  
  .aligncenter {
    margin-left: auto;
    margin-right: auto;
  }
  
  .alignleft,
  .alignright {
    margin: 0 1em;
    &:first-child {
      margin-top: .3em;

      @include respond-to('small') {
        margin-top: .45em;
      }
    }
  }

  .alignleft {
    float: left;
    margin-left: 0;
  }

  .alignnone {
    height: auto;
    width: 100%;
  }

  .alignright {
    float: right;
    margin-right: 0;
  }

  .wp-block-button__link {
    @include button-shape;

    background-color: $color-background-2;

    &:active,
    &:hover {
      background-color: $color-brand-primary;
      color: $color-foreground-max;
    }
  }

  .is-style-outline {
    .wp-block-button__link {
      background-color: transparent;
      border: $width-small solid $color-foreground-4;

      &:active,
      &:hover {
        border-color: $color-brand-primary;
        color: $color-foreground-max;
      }
    }
  }

  .is-style-squared {
    .wp-block-button__link {
      border-radius: 0;
    }
  }
}

/* -------------------------------------------------------------------------- */
/* Mixin for buttons
/* -------------------------------------------------------------------------- */
@mixin button-shape {
  align-items: center;
  border: 0;
  border-radius: 999px;
  color: $color-foreground-3;
  cursor: pointer;
  display: inline-flex;
  flex-direction: row;
  font-family: $font-family-interaction;
  font-weight: $font-weight-title;
  justify-content: center;
  line-height: 1;
  padding: .6em 1.2em;
  transition-duration: $speed-fast;


  &:link,
  &:visited,
  &:hover,
  &:active {
    text-decoration: none;
  }

  [class^="icon-"]:before,
  [class*=" icon-"]:before {
    font-size: 0.8em;
  }

  .icon {
    &-down,
    &-left,
    &-right,
    &-up {
      font-size: inherit;
    }
  }
}