/* ========================================================================== */
/* NAVGATION
/* ========================================================================== */

$content-padding-minor: $space-medium;
$content-padding-major: $space-medium + $space-small;
$toggle-width: ($space-medium + $space-small) / 2;

.navigation {
  position: relative;

  &__content {
    background-color: $color-background-max;
    border-left: $width-x-small solid $color-foreground-4;
    box-shadow: $shadow-large;
    height: 100vh;
    right: 0;
    opacity: 0;
    padding: #{$space-medium + $space-small} 0;
    position: fixed;
    transition-delay: 0;
    transition-duration: $speed-fast;
    transition-property: box-shadow opacity width;
    transition-timing-function: ease;
    top: 0;
    width: 0;
    z-index: 3000;
  }

  &__checkbox:checked~&__content {
    opacity: 1;
    width: 95%;
    padding-left: $content-padding-minor;
    padding-right: $content-padding-minor;
    
    @include respond-to('small') {
      padding-left: $content-padding-major;
      padding-right: $content-padding-major;
      width: 70%;
    }

    @include respond-to('large') {
      width: calc(
        100vw                                         /* viewport width */
        - ((100vw - #{$grid-width}) / 2)              /* minus grid left margin */
        - #{$grid-width}                              /* minus grid itself */
        + #{$grid-gutter}                             /* plus the grid gutter */
        + #{$toggle-width}                             /* plus the width of toggle; */
        + #{$content-padding-major}                   /* plus the padding of the navigation content */
      );
    }
  }

  &__checkbox {
    display: none;
  }

  &__group {
    border: $width-x-small solid $color-foreground-4;
    border-left: 0;
    border-right: 0;
    margin-top: -$width-x-small;
    padding: $space-small 0;

    &:first-child {
      border-top: 0;
    }

    &:last-child {
      border-bottom: 0;
    }

    @include respond-to('small') {
      width: 100%;
      max-width: #{.45 * 76.8rem - 2 * $space-medium + $space-small};
      padding: $space-medium 0;
    }
  }

  &__pages {
    text-overflow: clip;
    white-space: nowrap;
    
    ul {
      list-style: none;
      padding: 0;
      width: 100%;

      li {
        display: block;

        a {
          border-color: transparent;
          font-size: 1.5em;
          font-family: $font-family-interaction;
          font-weight: $font-weight-title;
          line-height: $font-height-copy;
          position: relative;
    
          &:link,
          &:visited,
          &:active,
          &:hover {
            text-decoration: none;
          }
    
          &:active,
          &:hover {
            border-color: $color-brand-primary;
          }
          
          @include respond-to('small') {
            font-size: 1.6em;
          }
        }

        ul {
          background-color: $color-background-max;
          border-left: $width-x-small solid $color-foreground-4;
          box-shadow: $shadow-large;
          display: flex;
          flex-direction: column;
          height: 100vh;
          justify-content: center;
          position: fixed;
          right: 0;
          top: 0;
          transition-duration: $speed-fast;
          width: 0;
          z-index: 4000;

          li a {
            font-size: 1.2em;
          }
        }

        &:hover > ul {
          padding-left: $space-medium;
          width: calc(95% - #{$content-padding-minor + $toggle-width});
          
          @include respond-to('small') {
            width: calc(70% - #{$content-padding-major + $toggle-width});
          }
          
          @include respond-to('large') {
            width: calc(
              100vw                                                       /* viewport width */
              - ((100vw - #{$grid-width}) / 2) - #{$grid-width}           /* minus grid left margin and grid itself */
              + #{$grid-gutter}
            );
          }
            
          li {
            &:hover > ul {
              padding-left: $space-medium;
              width: calc(95% - #{2 * ($content-padding-minor + $toggle-width)});
              
              @include respond-to('small') {
                width: calc(70% - #{2 * ($content-padding-major + $toggle-width)});
              }
          
              @include respond-to('large') {
                width: calc(
                  100vw                                         /* viewport width */
                  - ((100vw - 76.8rem) / 2) - 76.8rem           /* minus grid left margin and grid itself */
                  - #{2 * $grid-gutter + $toggle-width}
                );
              }
            }
          }
        }
      }

      .menu-item-has-children {
        > a {
          position: relative;

          &::before,
          &::after {
            background-color: $color-foreground-4;
            content: "";
            display: inline-block;
            height: $width-small;
            position: absolute;
            right: -1em;
            width: .5em;
          }

          &::after {
            bottom: calc(.5em - #{$width-small / 2});
            transform: rotate(-45deg);
          }

          &::before {
            top: calc(.5em - #{$width-small / 2});
            transform: rotate(45deg);
          }
        }
      }
    }
  }

  &__search-form {
    label {
      display: block;
      line-height: 1;
      margin-bottom: #{$font-size-copy * $scale-small};
      
      @include respond-to('small') {
        margin-bottom: $font-size-copy;
      }
    }

    .search-field {
      width: 100%;
    }
    
    .button {
      display: none;
      margin-top: $space-x-small;
    }
  }

  &__social-links {
    .button--icon {
      margin: .36rem 0;
    }

    .title-medium {
      margin-bottom: #{$font-size-copy * $scale-small};
      
      @include respond-to('small') {
        margin-bottom: $font-size-copy;
      }
    }
  }

  &__toggle {
    background-color: $color-background-2;
    border-radius: 100px;
    color: $color-foreground-3;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: $toggle-width;
    position: relative;
    text-align: center;
    transition-duration: $speed-fast;
    width: $toggle-width;
    z-index: 3500;

    &:hover {
      background-color: $color-brand-primary;
      color: $color-foreground-max;
    }
    
    &:hover span {
      &,
      &::after,
      &::before {
        background-color: $color-foreground-max;
      }
    }

    span {
      display: inline-block;
      position: relative;
      margin: 0 auto;

      &,
      &::before,
      &::after {
        height: $width-small;
        background-color: $color-foreground-2;
        display: inline-block;
        width: 1.8rem;
        transition: all;
        transition-duration: $speed-fast;
      }

      &::before,
      &::after {
        content: "";
        position: absolute;
        left: 0;
        width: 100%;
      }

      &::before {
        top: -.6rem;
      }

      &::after {
        top: .6rem;
      }
    }
  }

  &__checkbox:checked~&__toggle {
    background-color: $color-brand-primary;
    color: $color-foreground-max;
    margin-left: calc(-1 * (
      95vw                                            /* navigation content width */
      - #{$space-medium + $space-small}               /* minus navigation content padding */
    ));
    
    @include respond-to('small') {
      margin-left: calc(-1 * (
        70vw                                            /* navigation content width */
        - ((100vw - 76.8rem) / 2) - #{$space-small}     /* minus current position */
        - #{$space-medium + $space-small}               /* minus navigation content padding */
      ));
    }
    
    @include respond-to('large') {
      margin-left: 0;
    }

    span {
      background-color: transparent;

      &::after,
      &::before {
        top: 0;
        background-color: $color-foreground-max;
      }

      &::after {
        transform: rotate(-135deg);
      }

      &::before {
        transform: rotate(135deg);
      }
    }
  }
}